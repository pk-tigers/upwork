name: .NET Azure
on:
  push:
    branches:
      - azure
  
env:
    DOTNET_ROOT: ./backend/UpWork
jobs:
  build:
    environment: azure
    runs-on: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to registry
      uses: docker/login-action@v1
      with:
        registry: https://registryrm.azurecr.io/
        username: ${{ secrets.AzureAppService_ContainerUsername_67f1f39721fd4445af0cad308fb9d99f }}
        password: ${{ secrets.AzureAppService_ContainerPassword_bf7735c6501847538e159f4583418e34 }}
    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: '**/appsettings.json'
      env:
        ConnectionStrings.Default: ${{ secrets.UPWORK_CONNECTION_STRING }}
        JwtSettings.Issuer: ${{ secrets.UPWORK_ISSUER }}
        JwtSettings.Audience: ${{ secrets.UPWORK_AUDIENCE }}
        JwtSettings.Key: ${{ secrets.UPWORK_JWT_KEY }}
    - name: Build and push container image to registry
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: registryrm.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_67f1f39721fd4445af0cad308fb9d99f }}/registryrm/upwork-api:${{ github.sha }}
        context: ${{env.DOTNET_ROOT}}
        file: ${{env.DOTNET_ROOT}}/UpWork.Api/Dockerfile
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'azure'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'upwork-api'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_1b724ac5706444da97f7453cb501c2db }}
        images: 'registryrm.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_67f1f39721fd4445af0cad308fb9d99f }}/registryrm/upwork-api:${{ github.sha }}'
