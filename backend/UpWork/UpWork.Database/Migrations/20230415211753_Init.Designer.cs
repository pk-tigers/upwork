// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UpWork.Database;

#nullable disable

namespace UpWork.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230415211753_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.AbsenceModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AbsenceTypeId")
                        .HasColumnType("TEXT");

                    b.Property<int>("ApprovalState")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("TimeOffSupervisorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AbsenceTypeId");

                    b.HasIndex("TimeOffSupervisorId");

                    b.HasIndex("UserId");

                    b.ToTable("AbsenceModel");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.AbsenceTypeModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("NeedApproval")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("AbsenceTypeModel");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.OrganizationModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("UrlName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UrlName")
                        .IsUnique();

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.PermissionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GrantDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("PermissionType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Avatar")
                        .HasMaxLength(102400)
                        .HasColumnType("BLOB");

                    b.Property<Guid?>("CurrentTimeOffSupervisorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CurrentTimeOffSupervisorId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("OrganizationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.AbsenceModel", b =>
                {
                    b.HasOne("UpWork.Common.Models.DatabaseModels.AbsenceTypeModel", "AbsenceType")
                        .WithMany("Absences")
                        .HasForeignKey("AbsenceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UpWork.Common.Models.DatabaseModels.UserModel", "TimeOffSupervisor")
                        .WithMany()
                        .HasForeignKey("TimeOffSupervisorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UpWork.Common.Models.DatabaseModels.UserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AbsenceType");

                    b.Navigation("TimeOffSupervisor");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.AbsenceTypeModel", b =>
                {
                    b.HasOne("UpWork.Common.Models.DatabaseModels.OrganizationModel", "Organization")
                        .WithMany("AbsenceTypes")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.PermissionModel", b =>
                {
                    b.HasOne("UpWork.Common.Models.DatabaseModels.UserModel", "User")
                        .WithMany("Permissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.UserModel", b =>
                {
                    b.HasOne("UpWork.Common.Models.DatabaseModels.UserModel", "CurrentTimeOffSupervisor")
                        .WithMany("SupervisedEmployees")
                        .HasForeignKey("CurrentTimeOffSupervisorId");

                    b.HasOne("UpWork.Common.Models.DatabaseModels.OrganizationModel", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId");

                    b.Navigation("CurrentTimeOffSupervisor");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.AbsenceTypeModel", b =>
                {
                    b.Navigation("Absences");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.OrganizationModel", b =>
                {
                    b.Navigation("AbsenceTypes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("UpWork.Common.Models.DatabaseModels.UserModel", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("SupervisedEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
